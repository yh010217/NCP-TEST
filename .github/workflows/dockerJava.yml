# 폴더 구조는 .github/workflows 구조로. 근데 파일 이름은 걍 적어도 됨

name: DOCKER JAVA DEPLOY

on:
  push:
    branches:
      - no-cli

jobs:
  Deploy:
    runs-on: ubuntu-latest

    env: # GitHub Actions Secrets를 docker-compose.yml 에서의 환경 변수로 설정
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}


    steps:
      - name: Github Repository에 올린 파일 불러오기
        uses: actions/checkout@v2

      - name: application.yml 파일 만들기
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.yml

      - name: docker-compose 설치..
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.26.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version


      - name: 스프링부트 도커 이미지 만들기
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/cicd_test:latest .
          docker-compose -f docker-compose.yml build

      - name: 도커 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_LOGINID }}
          password: ${{ secrets.DOCKER_PASSWORD }}


      - name: 도커 이미지 푸시하기
        run: |
          docker-compose -f docker-compose.yml push

      - name: docker-compose.yml 전송
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.NCP_HOST_IP }}
          username: ${{ secrets.NCP_USERNAME }}
          password: ${{ secrets.NCP_PASSWORD }}
          source: "docker-compose.yml"
          target: "/root/" # EC2 서버의 디렉터리 경로

      - name: SSH로 EC2 원격 접속해서 실행시키기
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.NCP_HOST_IP }}
          username: ${{ secrets.NCP_USERNAME }}
          password: ${{ secrets.NCP_PASSWORD }}
          script_stop: true
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/cicd_test:latest
            docker-compose up -d >> /tmp/deploy.log 2>&1
